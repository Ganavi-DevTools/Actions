name: CI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          npm install
          npm install @actions/github

      - name: Run build script
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh

      - name: Dump GitHub Context
        run: |
          mkdir -p .github/context
          echo '${{ toJson(github) }}' | jq . > github.json
          echo "Saved GitHub context"
        
      - name: Upload Context File
        uses: actions/upload-artifact@v4
        with:
          name: workflow-context
          path: github.json
  
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Context
        uses: actions/download-artifact@v4
        with:
          name: workflow-context

      - name: Parse and Use Context
        env:
          GITHUB_CONTEXT_PATH: github.json
        run: |
          echo "---Raw Context ---"
          cat "$GITHUB_CONTEXT_PATH"

          echo "\n--- Selected Values ---"
          EVENT_TYPE=$(jq -r .event_name "$GITHUB_CONTEXT_PATH")
          BRANCH=$(jq -r .ref "$GITHUB_CONTEXT_PATH" | cut -d'/' -f3-)
          
          echo "Event: $EVENT_TYPE"
          echo "Branch: $BRANCH"

          if [[ "$EVENT_TYPE" == "workflow_dispatch" ]]; then
            echo "This was manually triggered!"
          else
            echo "Automatically triggered by $EVENT_TYPE"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production
        run: echo "Deploying to production..."
  
  matrix-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12, 14, 16]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
